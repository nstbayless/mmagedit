name: 'Build'

on:
  push:
    branches: [ master, main, dev, emulator ]
  pull_request:
    branches: [ master, main, dev, emulator ]
  schedule:
    # run every saturday at 4:43 AM
    - cron: '43 4 * * SAT'
  workflow_dispatch: # can run this manually
jobs:  
  # 32-bit windows build
  build-win32:
    runs-on: windows-latest
    steps:
    
    # sdl2
    - name: Cached SDL2
      id: vcpkg-sdl2
      uses: actions/cache@v3
      with:
        path: |
          C:/vcpkg/installed/x64-windows/include/SDL2
          C:/vcpkg/installed/x64-windows/bin/SDL2.dll
          C:/vcpkg/installed/x64-windows/bin/SDL2.pdb
          C:/vcpkg/installed/x64-windows/debug/bin/SDL2d.dll
          C:/vcpkg/installed/x64-windows/debug/bin/SDL2d.pdb
          C:/vcpkg/installed/x64-windows/debug/lib/SDL2d.lib
          C:/vcpkg/installed/x64-windows/debug/lib/manual-link/SDL2d.lib
          C:/vcpkg/installed/x64-windows/lib/SDL2.lib
          C:/vcpkg/installed/x64-windows/lib/manual-link/SDL2main.lib
          some/other/dependencies
        key: ${{ runner.os }}-vcpkg-sdl2

    - name: Install SDL2
      if: steps.vcpkg-sdl2.outputs.cache-hit != 'true'
      run: vcpkg install sdl2 --triplet x64-windows
    
    - run: tree /f /a C:/vcpkg/installed/
    - run: tree /f /a C:/vcpkg/
        
    # pull ------------------------
    - uses: actions/checkout@v2
    
    # nesm build
    - name: NESM
      env:
        VCPKG_ROOT: C:\\vcpkg
      run: cd nesm && cmake -DSDL2_INCLUDE_DIR=${{ env.VCPKG_ROOT }}/include/SDL2 -DSDL2_LIBRARY=${{ env.VCPKG_ROOT }}/lib/SDL2.lib . && make

    # python 3.6 is required for pyinstaller
    - name: Set up Python3.6
      uses: actions/setup-python@v4
      with:
        python-version: '3.6'

    # download dependencies
    - run: pwd
    - run: python3 --version
    - run: where python3
    - run: python3 -m pip install setuptools==50.3.2
    - run: python3 -m pip install pyinstaller==4.0 -vvv
    - run: python3 -m pip install Pillow
    
    # check that dependencies installed.
    - name: check-dependencies (1)
      run: python3 -c "from PIL import Image, ImageDraw, ImageOps"
     
    - name: check-dependencies (2)
      run: python3 -c "from tkinter import ttk"
      
    # pyinstaller build
    - name: build with pyinstaller
      run: pyinstaller mmagedit.py --windowed -i "icon.ico" --paths=. --hidden-import mmdata --add-data="icon.png;."
      
    - run: move dist\\mmagedit mmagedit
    - run: move examples mmagedit
    
    # test
    - run: python3 mmagedit.py --help
    - run: python3 mmagedit.py --deps
    - run: mmagedit\\mmagedit.exe --help
    - run: mmagedit\\mmagedit.exe --deps
    
    # release
    - uses: actions/upload-artifact@v2
      with:
        name: mmagedit
        path: mmagedit/
